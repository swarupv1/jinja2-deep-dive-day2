# Read formatted metrics from one or more HTTP endpoints
[[inputs.http]]
  ## One or more URLs from which to read formatted metrics
  urls = [
    "https://yh6f0r4529hb.statuspage.io/api/v2/summary.json",
  ]

  ## HTTP method
  method = "GET"

  ## Optional HTTP headers
  # headers = {"Accept" = "application/vnd.github.v3+json", "User-Agent" = "davidban77"}

  ## HTTP entity-body to send with POST/PUT requests.
  # body = ""

  ## HTTP Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  # content_encoding = "identity"

  ## Optional HTTP Basic Auth Credentials
  # username = "username"
  # password = "pa$$word"

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  insecure_skip_verify = true

  ## Amount of time allowed to complete the HTTP request
  timeout = "5s"

  ## List of success status codes
  success_status_codes = [200]

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"

  ## JSON input data format information can be found here:
  ## https://docs.influxdata.com/telegraf/v1.15/data_formats/input/json/
  json_query = 'components'

  tag_keys = ["name", "status", "description", "updated_at", "created_at"]

  json_time_key = "created_at"

  json_time_format = "2006-01-02T15:04:05.000Z"


[[processors.enum]]
  [[processors.enum.mapping]]
    ## Name of the tag to map
    tag = "status"

    ## Destination tag or field to be used for the mapped value.  By default the
    ## source tag or field is used, overwriting the original value.
    dest = "status_code"

    ## Table of mappings
    [processors.enum.mapping.value_mappings]
      operational = 1
      degraded_performance = 2
      partial_outage = 3
      major_outage = 4

[[outputs.prometheus_client]]
  listen = ":9014"
  metric_version = 2
